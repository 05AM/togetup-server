plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.jogijo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

compileJava.options.encoding = 'UTF-8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.vladmihalcea:hibernate-types-52:2.17.3'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA

	//
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'


	// security
	implementation('org.springframework.boot:spring-boot-starter-security')

	// DB
	//runtimeOnly ('mysql:mysql-connector-java:8.0.32') //mysql8
	runtimeOnly("com.mysql:mysql-connector-j")
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation'mysql:mysql-connector-java'


	// mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'

	// aws s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//jwt
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	//oauth

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//




}

tasks.named('test') {
	useJUnitPlatform()
}
